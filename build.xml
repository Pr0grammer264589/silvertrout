<project name="Silvertrout" default="build">
  <description>Silvertrout is an IRC bot</description>
  <property name="source.dir"    value="source"/>
  <property name="build.dir"     value="build"/>
  <property name="dist.dir"      value="distribution"/>  
  <property name="doc.dir"       value="documentation"/>
  <property name="resources.dir" value="resources"/>
  <property name="lib.dir"       value="libraries"/>
  <property name="javadoc.dir"   value="${doc.dir}/javadoc"/>
  <property name="classes.dir"   value="${build.dir}/classes"/>
  <property name="jar.dir"       value="${build.dir}/jar"/>
  <property name="test.dir"      location="test" />
  <property name="ant-lib.dir"   value="ant" />

  <property name="debug"         value="true"/>


  <path id="classpath.test">
    <pathelement path="${ant-lib.dir}/junit.jar" />
  	<pathelement path="${ant-lib.dir}/org.hamcrest.core.jar" />
    <pathelement location="${test.dir}" />
  	<path refid="project.libs" />
  </path>

  <path id="project.libs">
      <pathelement location="${lib.dir}/SQLiteJDBCv056/sqlitejdbc-v056.jar"/>
      <pathelement location="${lib.dir}/HTMLParser/htmlparser.jar"/>
      <pathelement location="${lib.dir}/HTMLParser/htmllexer.jar"/>
      <pathelement location="${lib.dir}/google-api-translate-java/google-api-translate-java-0.91.jar"/>
      <pathelement location="${lib.dir}/joda-time-2.1/joda-time-2.1.jar"/>
      <pathelement path="${classes.dir}"/>
  </path>

	<target name="compile-test" depends="build">
		<!-- debug is true to allow line numbers in test case print outs -->
    <javac srcdir="${test.dir}" destdir="${test.dir}" classpathref="classpath.test" debug="true">
    </javac>
  </target>
  
  <target name="clean-compile-test">
    <delete>
      <fileset dir="${test.dir}" includes="**/*.class" />
    </delete>
  </target>

  <target name="test" depends="compile-test">
    <junit printsummary="yes">
      <classpath refid="classpath.test" />
      <formatter type="brief" usefile="false" />
    	<batchtest>
          <fileset dir="${test.dir}" includes="**/*Test.java"/>
      </batchtest>
    </junit>
  </target>
	
  <target name="run" depends="build" description="Run silvertrout">
    <java dir="${classes.dir}" fork="true" classname="silvertrout.IRC" classpathref="project.libs" />
  </target>
  
  <target name="build" depends="build-silvertrout,build-plugins" />
  
  <target name="build-silvertrout" description="Standard build">
    <echo>Building silvertrout...</echo>
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${source.dir}" destdir="${classes.dir}" debug="${debug}" classpathref="project.libs">
      <exclude name="silvertrout/plugins/**" />
    </javac>
    <echo>Copying silvertrout resources...</echo>
    <copy preservelastmodified="true" includeEmptyDirs="true" todir="${classes.dir}">
      <fileset dir="${resources.dir}" excludes="silvertrout/plugins/**"/>
    </copy>
  </target>
  
  <target name="build-plugins" depends="build-silvertrout" description="Build plugins">
    <echo>Building silvertrout plugins...</echo>
    <javac srcdir="${source.dir}" destdir="${classes.dir}" debug="${debug}" classpathref="project.libs">
      <include name="silvertrout/plugins/**/*.java" />
    </javac>
    <echo>Copying silvertrout plugin resources...</echo>
    <copy preservelastmodified="true" includeEmptyDirs="true" todir="${classes.dir}">
      <fileset dir="${resources.dir}" includes="silvertrout/plugins/**"/>
    </copy>
  </target>
  
  <target name="jar" depends="build" description="Building jar file">
    <echo>Building silvertrout as a jar...</echo> 
    <mkdir dir="${jar.dir}"/>
    <jar destfile="${jar.dir}/silvertrout.jar">
      <manifest>
        <attribute name="Implementation-Title" value="Silvertrout"/>
        <attribute name="Implementation-Version" value="Beta"/>

        <attribute name="Built-By" value="${user.name}"/>

        <attribute name="Main-Class" value="silvertrout.IRC"/>
      </manifest>
      
      <fileset dir="${classes.dir}" />

    </jar>
  </target> 
  
  <target name="javadoc">
    <echo>Building silvertrout documentation...</echo>
    <javadoc source="${ant.build.javac.source}" sourcepath="${source.dir}"
             destdir="${javadoc.dir}">
    </javadoc>
  </target>
  
  <target name="clean" depends="clean-compile-test">
    <echo>Cleaning generated silvertrout builds...</echo>
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete dir="${javadoc.dir}"/>
  </target>

</project>
